"""
1. 영어 대소문자와 띄어쓰기만으로 이루어진 문자열이 주어진다. 이 문자열에는 몇 개의 단어가 있을까? 이를 구하는 프로그램을 작성하시오.
단, 한 단어가 여러 번 등장하면 등장한 횟수만큼 모두 세어야 한다.

S=input()
count=0
if S[0]==' ':
    count-=1
if S[-1]==' ':
    count-=1
word=list(S.split(" "))
count+=len(word)
print(count)

#이 과정에서 하나 실수를 했던게 s[0]==' ' or s[-1]==' '이라고 한번에 표현하려고 했는데, 이렇게 하니까
#조건 2개가 충족되는 경우 -1을 두번해서 -2를 해야되는데, 한 조건문에 있어서 -1밖에 안되서 따로 나눠야했다. or문 조심하자

2. 상근이의 동생 상수는 수학을 정말 못한다. 상수는 숫자를 읽는데 문제가 있다.
이렇게 수학을 못하는 상수를 위해서 상근이는 수의 크기를 비교하는 문제를 내주었다.
상근이는 세 자리 수 두 개를 칠판에 써주었다. 그 다음에 크기가 큰 수를 말해보라고 했다.
상수는 수를 다른 사람과 다르게 거꾸로 읽는다.
예를 들어, 734와 893을 칠판에 적었다면, 상수는 이 수를 437과 398로 읽는다.
따라서, 상수는 두 수중 큰 수인 437을 큰 수라고 말할 것이다.
두 수가 주어졌을 때, 상수의 대답을 출력하는 프로그램을 작성하시오.
첫째 줄에 상근이가 칠판에 적은 두 수 A와 B가 주어진다. 두 수는 같지 않은 세 자리 수이며, 0이 포함되어 있지 않다.

A,B=input().split()
A_da=0
B_da=0
for i in range(2,-1,-1):
    if int(A[i])>int(B[i]):
        A_da=1
        break
    elif int(A[i])<int(B[i]):
        B_da=1
        break
if A_da==1:
    for i in range (2,-1,-1):
        print(A[i],end="")
if B_da==1:
    for i in range (2,-1,-1):
        print(B[i],end="")
# range(2,-1)이라고 하면 내가 생각한대로 뒤로 안가고 앞으로 찾아서 오류가 발생한다..ㅠ
# range(숫자,숫자,숫자A)를 하면 A를 간격으로 이동한다는 사실을 알았따

# 추가로 선배가 알려준 편한 방법 - [2:]는 2부터 끝까지인걸 응용해서 첨부터 끝까지 -1씩 한다 == 뒤로 다 뒤집는다 !! 꿀팁
A,B=input().split()

A = int(A[::-1])
B = int(B[::-1])

if A > B:    print(A)
else:    print(B)
#
3. 상근이의 할머니는 아래 그림과 같이 오래된 다이얼 전화기를 사용한다.
전화를 걸고 싶은 번호가 있다면, 숫자를 하나를 누른 다음에 금속 핀이 있는 곳 까지 시계방향으로 돌려야 한다.
숫자를 하나 누르면 다이얼이 처음 위치로 돌아가고, 다음 숫자를 누르려면 다이얼을 처음 위치에서 다시 돌려야 한다.
숫자 1을 걸려면 총 2초가 필요하다.
1보다 큰 수를 거는데 걸리는 시간은 이보다 더 걸리며, 한 칸 옆에 있는 숫자를 걸기 위해선 1초씩 더 걸린다.
상근이의 할머니는 전화 번호를 각 숫자에 해당하는 문자로 외운다.
즉, 어떤 단어를 걸 때, 각 알파벳에 해당하는 숫자를 걸면 된다. 예를 들어, UNUCIC는 868242와 같다.
할머니가 외운 단어가 주어졌을 때, 이 전화를 걸기 위해서 필요한 시간을 구하는 프로그램을 작성하시오.

Num_list=['ABC', 'DEF', 'GHI', 'JKL', 'MNO', 'PQRS', 'TUV', 'WXYZ']
S=input()
score=0
for i in range(len(S)):
    for j in Num_list:
        if S[i] in j:
            score += Num_list.index(j)+3
print(score)

4. 예전에는 운영체제에서 크로아티아 알파벳을 입력할 수가 없었다. 따라서, 다음과 같이 크로아티아 알파벳을 변경해서 입력했다.
예를 들어, ljes=njak은 크로아티아 알파벳 6개(lj, e, š, nj, a, k)로 이루어져 있다.
단어가 주어졌을 때, 몇 개의 크로아티아 알파벳으로 이루어져 있는지 출력한다.
dž는 무조건 하나의 알파벳으로 쓰이고, d와 ž가 분리된 것으로 보지 않는다. lj와 nj도 마찬가지이다.
위 목록에 없는 알파벳은 한 글자씩 센다.
"""
Cro_list=['c=','c-','dz=','d-','lj','nj','s=','z=']

S=input()
count=len(S)
for i in range(0,len(S)-1):
     for j in Cro_list:
            if j==S[i]+S[i+1]+S[i+2]:
                count-=2
            else:
                if j==S[i]+S[i+1]:
                    print("정신 나갈거 같아")
                    count-=1
print(count)
#아..모르겠다 내일 다시해야겠다