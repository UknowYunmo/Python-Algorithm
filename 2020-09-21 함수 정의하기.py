"""
1.정수 n개가 주어졌을 때, n개의 합을 구하는 함수를 작성하시오.
작성해야 하는 함수는 다음과 같다.
a: 합을 구해야 하는 정수 n개가 저장되어 있는 배열 (0 ≤ a[i] ≤ 1,000,000, 1 ≤ n ≤ 3,000,000)
리턴값: a에 포함되어 있는 정수 n개의 합

def solve(a):
    sum=0
    for i in range(0,len(a)):
        sum+=a[i]
    return sum

2. 셀프 넘버는 1949년 인도 수학자 D.R. Kaprekar가 이름 붙였다.
양의 정수 n에 대해서 d(n)을 n과 n의 각 자리수를 더하는 함수라고 정의하자. 예를 들어, d(75) = 75+7+5 = 87이다.
양의 정수 n이 주어졌을 때, 이 수를 시작해서 n, d(n), d(d(n)), d(d(d(n))), ...과 같은 무한 수열을 만들 수 있다.
예를 들어, 33으로 시작한다면 다음 수는 33 + 3 + 3 = 39이고, 그 다음 수는 39 + 3 + 9 = 51, 다음 수는 51 + 5 + 1 = 57이다.
이런식으로 다음과 같은 수열을 만들 수 있다.
33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, ...
n을 d(n)의 생성자라고 한다. 위의 수열에서 33은 39의 생성자이고, 39는 51의 생성자, 51은 57의 생성자이다.
생성자가 한 개보다 많은 경우도 있다. 예를 들어, 101은 생성자가 2개(91과 100) 있다.
생성자가 없는 숫자를 셀프 넘버라고 한다.
100보다 작은 셀프 넘버는 총 13개가 있다. 1, 3, 5, 7, 9, 20, 31, 42, 53, 64, 75, 86, 97
10000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 출력하는 프로그램을 작성하시오.

def d(n):
    if n<10:
        n+=n
    elif n<100:
        n=n+(n//10)+(n%10)
    elif n<1000:
        n=n+(n//100)+(n//10%10)+(n%10)
    elif n<10000:
        n=n+(n//1000)+(n//100%10)+(n//10%10)+(n%10)
    return n
no_self_number=[]
for i in range(1,10000):
    no_self_number.append(d(n=i))
def check():
    for i in range(1,10000):
        if no_self_number.count(i)==0:
            print(i)
check()

3. 어떤 양의 정수 X의 각 자리가 등차수열을 이룬다면, 그 수를 한수라고 한다.
등차수열은 연속된 두 개의 수의 차이가 일정한 수열을 말한다.
N이 주어졌을 때, 1보다 크거나 같고, N보다 작거나 같은 한수의 개수를 출력하는 프로그램을 작성하시오.
"""
def d(n):
    if 99<n<1000:
        if (n//100)-(n//10%10)!=(n//10%10)-(n%10):
            return n
    elif n==1000:
        return n
no_han=[]
for i in range(1,1001):
    no_han.append(d(n=i))
def check(n):
    han = 0
    for i in range(1,n+1):
        if no_han.count(i)==0:
            han+=1
    print(han)
check(n=int(input()))

# 한수가 절대값 그것도 포함하는줄 알았었는데 아니었다. 참고로 절대값 함수는 abs()에 씌우면 된다.
# 보이는 것처럼 함수에 직접 매개변수를 입력시켜줘야된다.
# 그리고 if문에 99<n<1000 이렇게 조건 2개를 한 번에 줘봤는데 된다!